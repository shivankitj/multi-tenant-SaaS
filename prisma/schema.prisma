generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"  
  url      = env("DATABASE_URL")
}


model Tenant {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  name         String
  slug         String        @unique // e.g., "acme", "globex"
  users        User[]
  notes        Note[]
  subscription Subscription? // A tenant can have one subscription

  @@map("tenants")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  role      String
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  tenantId  String

  // Reverse relation for notes
  notes Note[]

  @@map("users")
}

model Note {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  tenantId  String

  @@map("notes")
}

model Subscription {
  id        String   @id @default(cuid())
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  tenantId  String   @unique
  planType  String   @default("Free") // "Free" or "Pro"
  updatedAt DateTime @updatedAt

  @@map("subscriptions")
}
